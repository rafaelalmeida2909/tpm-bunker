version: "3.8"

services:
  mongodb:
    image: mongo:latest
    container_name: tpm_bunker_mongodb
    env_file:
      - ./internal/tpm-bunker-api/src/.env.docker
    command: ["mongod", "--auth", "--quiet", "--logpath", "/dev/null"]
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME}
    volumes:
      - mongo_data:/data/db
      - ./internal/tpm-bunker-api/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    healthcheck:
      test: mongosh --eval "db.adminCommand('ping')"
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      - internal_network

  django_api:
    build:
      context: .
      dockerfile: Dockerfile.django
    container_name: django_api
    depends_on:
      mongodb:
        condition: service_healthy
    env_file:
      - ./internal/tpm-bunker-api/src/.env.docker
    ports:
      - "8003:8003"
    environment:
      DEBUG: 1
      TZ: "America/Sao_Paulo"
      PGTZ: "America/Sao_Paulo"
    volumes:
      - ./internal/tpm-bunker-api:/django-app
    networks:
      - internal_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/api/v1/"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  wails_app:
    build:
      context: .
      dockerfile: Dockerfile.wails
    container_name: wails_app
    depends_on:
      django_api:
        condition: service_healthy
    environment:
      - DISPLAY=${DISPLAY:-:0}
      - XAUTHORITY=/tmp/.docker.xauth
      - TPM2TOOLS_TCTI=device:/dev/tpm0
      - TPM2_PKCS11_STORE=/var/run/tpm
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /tmp/.docker.xauth:/tmp/.docker.xauth:rw
      - /dev/tpm0:/dev/tpm0:rw
      - /dev/tpmrm0:/dev/tpmrm0:rw
      - /var/run/tpm:/var/run/tpm:rw
      - /var/lib/tpm:/var/lib/tpm:rw
    devices:
      - /dev/tpm0
      - /dev/tpmrm0
    privileged: true
    network_mode: "host"
    cap_add:
      - SYS_ADMIN
      - IPC_LOCK
    security_opt:
      - seccomp:unconfined

volumes:
  mongo_data:

networks:
  internal_network: