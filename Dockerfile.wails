# Frontend builder stage
FROM node:20.11.1 AS frontend-builder

WORKDIR /app

# Copy package.json and package-lock.json
COPY ./frontend/package*.json ./

# Install dependencies
RUN npm install

# Copy the rest of the frontend code
COPY ./frontend .

# Build the Svelte frontend
RUN npm run build

# Backend builder stage
FROM golang:1.22 AS backend-builder

# Install Node.js and npm
RUN apt-get update && apt-get install -y curl
RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -
RUN apt-get install -y nodejs

# Install Wails CLI
RUN go install github.com/wailsapp/wails/v2/cmd/wails@latest

# Install required libraries for Wails
RUN apt-get update && apt-get install -y \
    libgtk-3-dev \
    libwebkit2gtk-4.0-dev \
    libayatana-appindicator3-dev \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy Go module files
COPY go.mod go.sum ./

# Download Go dependencies
RUN go mod download

# Copy the rest of the backend code
COPY . .

# Copy the built frontend assets
COPY --from=frontend-builder /app/dist ./frontend/build

# Reinstall frontend dependencies to fix npm bug
WORKDIR /app/frontend
RUN rm -rf node_modules package-lock.json
RUN npm install

# Build the Wails application
WORKDIR /app
RUN wails build

# Final stage
FROM ubuntu:22.04

# Install necessary dependencies
RUN apt-get update && apt-get install -y \
    libgtk-3-0 \
    libwebkit2gtk-4.0-37 \
    libglib2.0-0 \
    libgdk-pixbuf2.0-0 \
    libpangocairo-1.0-0 \
    libcairo2 \
    libatk1.0-0 \
    libatk-bridge2.0-0 \
    dbus-x11 \
    xauth \
    x11-xserver-utils \
    tpm2-tools \
    tpm2-abrmd \
    libtss2-dev \
    libtss2-tcti-device0 \
    libtss2-tcti-mssim0 \
    libtss2-esys-3.0.2-0 \
    libtss2-fapi1 \
    libtss2-mu0 \
    libtss2-rc0 \
    libtss2-sys1 \
    libtss2-tctildr0 \
    && rm -rf /var/lib/apt/lists/*

# Copy the built Wails application
COPY --from=backend-builder /app/build/bin/myproject /usr/local/bin/myproject

# Set TPM device permissions
RUN mkdir -p /var/run/tpm && \
    chmod 777 /var/run/tpm

# Create TPM state directory
RUN mkdir -p /var/lib/tpm && \
    chmod 777 /var/lib/tpm

# Create a non-root user and add to necessary groups
RUN useradd -m -s /bin/bash wails && \
    groupadd -f tss && \
    usermod -a -G tss,dialout,plugdev wails

# Set up direct TPM access
RUN chmod 666 /dev/tpm0 || true
RUN chmod 666 /dev/tpmrm0 || true

USER wails
WORKDIR /home/wails

# Set up X11 environment
ENV DISPLAY=:0
ENV TPM2TOOLS_TCTI="device:/dev/tpm0"
ENV TPM2_PKCS11_STORE="/var/run/tpm"
ENV DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus

CMD ["myproject"]